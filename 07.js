const { LinkedList } = require("../DS");

/* ‚ö†Ô∏è NO MODIFICAR NADA POR ENCIMA DE ESTA L√çNEA ‚ö†Ô∏è

7Ô∏è‚É£ ***** EJERCICIO 07 ***** - pacientesConMasDeUnaEnfermedad() 7Ô∏è‚É£ 

Necesitamos darle mayor prioridad a los pacientes que tienen m√°s de una enfermedad. Para esto necesitamos que
agregues un nuevo m√©todo a la LinkedList. Este m√©todo debe crear y devolver una nueva LinkedList.

Esta nueva LinkedList debe contener solo a aquellos pacientes que posean m√°s de una enfermedad.
Cada nodo (paciente) contiene las propiedades: id, nombre, enfermedad (esta ultima es un array con las enfermedades). 

üìù EJEMPLO üìù 
(INPUT) ‚û° LinkedList {[{id: 1, nombre: 'Mar√≠a', enfermedad: ['Bronquitis']},
            {id: 2, nombre: 'Lucas', enfermedad: ['Neumon√≠a', 'Hipertensi√≥n']}]}

(OUTPUT) ‚û° LinkedList { array: [{id: 2, nombre: 'Lucas', enfermedad: ['Neumon√≠a', 'Hipertensi√≥n']}] }

REQUISITOS
 üü¢ Devolver una nueva lista de los pacientes que tienen m√°s de una enfermedad.
 üü¢ Si no hay pacientes con m√°s de una enfermedad, devolver una lista vac√≠a.
*/

LinkedList.prototype.pacientesConMasDeUnaEnfermedad = function (lista) {
  const newList = new LinkedList(); // Crear una nueva LinkedList vac√≠a

  let currentNode = lista.head; // Obtener el nodo actual (paciente)

  while (currentNode) {
    if (currentNode.value.enfermedad.length > 1) {
      newList.add(currentNode.value); // Agregar el paciente a la nueva lista
    }

    currentNode = currentNode.next; // Mover al siguiente nodo
  }

  return newList; // Devolver la nueva lista de pacientes con m√°s de una enfermedad
};

// ‚ö†Ô∏è NO MODIFICAR NADA POR DEBAJO DE ESTA L√çNEA ‚ö†Ô∏è
module.exports = LinkedList;
